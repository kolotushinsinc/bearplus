import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { apiService } from '../../services/apiService';

const ForgotPasswordPage: React.FC = () => {
  const navigate = useNavigate();
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  const validateEmail = (email: string): boolean => {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!email.trim()) {
      setError('Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }

    if (!validateEmail(email)) {
      setError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await apiService.passwordReset.requestCode(email);
      
      if (response.success) {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–≤–æ–¥–∞ –∫–æ–¥–∞
        navigate(`/auth/verify-reset-code?email=${encodeURIComponent(email)}`);
      } else {
        setError(response.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    } catch (error: any) {
      console.error('Forgot password error:', error);
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-tech-gradient flex items-center justify-center p-4">
      <div className="form-container w-full max-w-md animate-fade-in">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-3 mb-6">
            <div className="p-3 bg-tech-primary/10 rounded-xl border border-tech-primary/20">
              <span className="text-3xl">üîë</span>
            </div>
            <h1 className="logo-text text-gradient">BearPlus</h1>
          </div>
          <h2 className="text-tech-title mb-3">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</h2>
          <p className="text-tech-caption">
            –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å –∏ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º 4-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
          </p>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          {error && (
            <div className="alert alert-error">
              <span className="text-lg">‚ùå</span>
              <span>{error}</span>
            </div>
          )}

          <div className="form-group">
            <label htmlFor="email" className="form-label">
              üìß Email –∞–¥—Ä–µ—Å
            </label>
            <input
              id="email"
              type="email"
              value={email}
              onChange={(e) => {
                setEmail(e.target.value);
                if (error) setError(''); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
              }}
              className={`input-field ${error ? 'error' : ''}`}
              placeholder="your@email.com"
              disabled={isLoading}
              required
            />
          </div>

          <button
            type="submit"
            className="btn-primary w-full relative"
            disabled={isLoading || !email.trim()}
          >
            {isLoading && (
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="w-5 h-5 border-2 border-tech-bg border-t-transparent rounded-full animate-spin"></div>
              </div>
            )}
            <span className={isLoading ? 'opacity-0' : 'opacity-100'}>
              üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥
            </span>
          </button>

          <div className="text-center space-y-4">
            <p className="text-tech-caption">
              –í—Å–ø–æ–º–Ω–∏–ª–∏ –ø–∞—Ä–æ–ª—å?{' '}
              <Link to="/auth/login" className="text-tech-primary hover:text-tech-accent transition-colors font-medium">
                –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
              </Link>
            </p>
            <p className="text-tech-caption">
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
              <Link to="/auth/register" className="text-tech-primary hover:text-tech-accent transition-colors font-medium">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Link>
            </p>
          </div>
        </form>

        {/* Security Info */}
        <div className="card mt-8 bg-tech-surface border-tech-border-light">
          <div className="flex items-start gap-3">
            <div className="p-2 bg-tech-info/10 rounded-lg border border-tech-info/20">
              <span className="text-sm">üîí</span>
            </div>
            <div>
              <h3 className="text-tech-caption font-medium mb-2">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
              <p className="text-tech-mono text-xs">
                –ö–æ–¥ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç. 
                –ü–æ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –º—ã –Ω–µ —Å–æ–æ–±—â–∞–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ email –≤ —Å–∏—Å—Ç–µ–º–µ.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ForgotPasswordPage;