import * as React from 'react';
import { useState, useEffect } from 'react';
import { Link, useNavigate, useSearchParams, useLocation } from 'react-router-dom';
import authService from '../../services/authService';

const VerifyEmailPage: React.FC = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const [searchParams] = useSearchParams();
  
  const token = searchParams.get('token');
  const email = searchParams.get('email') || location.state?.email;

  const [isVerifying, setIsVerifying] = useState(false);
  const [verificationStatus, setVerificationStatus] = useState<'pending' | 'success' | 'error' | null>(null);
  const [isResending, setIsResending] = useState(false);
  const [resendCooldown, setResendCooldown] = useState(0);

  useEffect(() => {
    if (token) {
      verifyEmail(token);
    }
  }, [token]);

  useEffect(() => {
    let interval: number;
    if (resendCooldown > 0) {
      interval = setInterval(() => {
        setResendCooldown(prev => prev - 1);
      }, 1000);
    }
    return () => clearInterval(interval);
  }, [resendCooldown]);

  const verifyEmail = async (verificationToken: string) => {
    setIsVerifying(true);
    
    try {
      console.log('Verifying email with token:', verificationToken);
      
      // Call real API for email verification
      const response = await authService.verifyEmail(verificationToken);
      
      if (response.success) {
        setVerificationStatus('success');
        
        // Redirect to login after successful verification
        setTimeout(() => {
          navigate('/auth/login', {
            state: {
              message: 'Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.'
            }
          });
        }, 3000);
      } else {
        setVerificationStatus('error');
      }
      
    } catch (error) {
      console.error('Email verification error:', error);
      setVerificationStatus('error');
    } finally {
      setIsVerifying(false);
    }
  };

  const handleResendEmail = async () => {
    if (!email || resendCooldown > 0) return;

    setIsResending(true);
    
    try {
      console.log('Resending verification email to:', email);
      
      // Call API to resend verification email
      // Note: This endpoint needs to be implemented in the backend
      await fetch(`${import.meta.env.VITE_API_URL || 'http://localhost:5005/api'}/auth/resend-verification`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });
      
      // Set cooldown for 60 seconds
      setResendCooldown(60);
      
    } catch (error) {
      console.error('Resend email error:', error);
    } finally {
      setIsResending(false);
    }
  };

  // Email verification in progress
  if (isVerifying) {
    return (
      <div className="min-h-screen bg-bearplus-bg flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-md w-full space-y-8">
          <div className="text-center">
            <Link to="/" className="inline-block">
              <img
                className="h-12 w-auto"
                src="/logo.png"
                alt="BearPlus"
              />
            </Link>
            
            <div className="mt-6 mx-auto flex items-center justify-center h-16 w-16">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-bearplus-green"></div>
            </div>
            
            <h2 className="mt-6 text-3xl font-bold text-white">
              –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email...
            </h2>
            
            <p className="mt-2 text-sm text-gray-400">
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ
            </p>
          </div>
        </div>
      </div>
    );
  }

  // Successful verification
  if (verificationStatus === 'success') {
    return (
      <div className="min-h-screen bg-bearplus-bg flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-md w-full space-y-8">
          <div className="text-center">
            <Link to="/" className="inline-block">
              <img
                className="h-12 w-auto"
                src="/logo.png"
                alt="BearPlus"
              />
            </Link>
            
            {/* Success Icon */}
            <div className="mt-6 mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100">
              <span className="text-2xl">‚úÖ</span>
            </div>
            
            <h2 className="mt-6 text-3xl font-bold text-white">
              Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!
            </h2>
            
            <div className="mt-4 text-sm text-gray-400 space-y-2">
              <p>
                –í–∞—à email –∞–¥—Ä–µ—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.
              </p>
              <p>
                –°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.
              </p>
            </div>
          </div>

          <div className="flex justify-center">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-bearplus-green"></div>
          </div>
        </div>
      </div>
    );
  }

  // Verification error
  if (verificationStatus === 'error') {
    return (
      <div className="min-h-screen bg-bearplus-bg flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-md w-full space-y-8">
          <div className="text-center">
            <Link to="/" className="inline-block">
              <img
                className="h-12 w-auto"
                src="/logo.png"
                alt="BearPlus"
              />
            </Link>
            
            {/* Error Icon */}
            <div className="mt-6 mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100">
              <span className="text-2xl">‚ùå</span>
            </div>
            
            <h2 className="mt-6 text-3xl font-bold text-white">
              –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            </h2>
            
            <div className="mt-4 text-sm text-gray-400 space-y-2">
              <p>
                –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à email –∞–¥—Ä–µ—Å.
              </p>
            </div>
          </div>

          <div className="space-y-4">
            <div className="bg-bearplus-card rounded-lg p-4">
              <h3 className="text-sm font-medium text-white mb-2">
                –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
              </h3>
              <ul className="text-xs text-gray-400 space-y-1">
                <li>‚Ä¢ –°—Å—ã–ª–∫–∞ —É–∂–µ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞</li>
                <li>‚Ä¢ –°—Å—ã–ª–∫–∞ –∏—Å—Ç–µ–∫–ª–∞</li>
                <li>‚Ä¢ –°—Å—ã–ª–∫–∞ –±—ã–ª–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –Ω–µ–ø–æ–ª–Ω–æ—Å—Ç—å—é</li>
              </ul>
            </div>

            <div className="flex flex-col space-y-2">
              {email && (
                <button
                  onClick={handleResendEmail}
                  disabled={isResending || resendCooldown > 0}
                  className="btn-primary w-full disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {isResending ? (
                    <div className="flex items-center justify-center">
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                      –û—Ç–ø—Ä–∞–≤–∫–∞...
                    </div>
                  ) : resendCooldown > 0 ? (
                    `–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ ${resendCooldown} —Å–µ–∫`
                  ) : (
                    '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ'
                  )}
                </button>
              )}
              
              <Link
                to="/auth/login"
                className="btn-secondary w-full text-center"
              >
                –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É
              </Link>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // Default state - waiting for email verification
  return (
    <div className="min-h-screen bg-bearplus-bg flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8">
        <div className="text-center">
          <Link to="/" className="inline-block">
            <img
              className="h-12 w-auto"
              src="/logo.png"
              alt="BearPlus"
            />
          </Link>
          
          {/* Email Icon */}
          <div className="mt-6 mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-blue-100">
            <span className="text-2xl">üìß</span>
          </div>
          
          <h2 className="mt-6 text-3xl font-bold text-white">
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email
          </h2>
          
          <div className="mt-4 text-sm text-gray-400 space-y-2">
            <p>
              –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –Ω–∞ –∞–¥—Ä–µ—Å:
            </p>
            {email && (
              <p className="font-medium text-bearplus-green">
                {email}
              </p>
            )}
            <p>
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤ –ø–∏—Å—å–º–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞.
            </p>
          </div>
        </div>

        <div className="space-y-4">
          <div className="bg-bearplus-card rounded-lg p-4">
            <h3 className="text-sm font-medium text-white mb-2">
              –ù–µ –ø–æ–ª—É—á–∏–ª–∏ –ø–∏—Å—å–º–æ?
            </h3>
            <ul className="text-xs text-gray-400 space-y-1 mb-3">
              <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º" –∏–ª–∏ "–ù–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ—á—Ç–∞"</li>
              <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ email –∞–¥—Ä–µ—Å —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ</li>
              <li>‚Ä¢ –ü–∏—Å—å–º–æ –º–æ–∂–µ—Ç –ø—Ä–∏–π—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5-10 –º–∏–Ω—É—Ç</li>
            </ul>
            
            {email && (
              <button
                onClick={handleResendEmail}
                disabled={isResending || resendCooldown > 0}
                className="btn-secondary w-full text-xs disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isResending ? (
                  <div className="flex items-center justify-center">
                    <div className="animate-spin rounded-full h-3 w-3 border-b-2 border-current mr-2"></div>
                    –û—Ç–ø—Ä–∞–≤–∫–∞...
                  </div>
                ) : resendCooldown > 0 ? (
                  `–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ (${resendCooldown})`
                ) : (
                  '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ'
                )}
              </button>
            )}
          </div>

          <div className="flex flex-col space-y-2">
            <Link
              to="/auth/login"
              className="btn-primary w-full text-center"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É
            </Link>
            
            <Link
              to="/auth/register"
              className="text-center text-sm text-bearplus-green hover:text-bearplus-green/80"
            >
              –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç
            </Link>
          </div>
        </div>

        {/* Security Notice */}
        <div className="bg-bearplus-card rounded-lg p-4">
          <h3 className="text-sm font-medium text-white mb-2">
            –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
          </h3>
          <p className="text-xs text-gray-400">
            –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
            –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –≤ BearPlus, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
          </p>
        </div>
      </div>
    </div>
  );
};

export default VerifyEmailPage;