import * as React from 'react';
import { useState } from 'react';
import { useAppDispatch, useAppSelector } from '../hooks/redux';
import { logoutUser } from '../store/slices/authSlice';
import { useNavigate } from 'react-router-dom';
import ShippingCalculator from '../components/ShippingCalculator';
import OrdersManagement from '../components/dashboard/OrdersManagement';
import DocumentsManagement from '../components/dashboard/DocumentsManagement';
import MessengerSystem from '../components/dashboard/MessengerSystem';
import ShipTrackingMap from '../components/dashboard/ShipTrackingMap';
import ProfileSettings from '../components/dashboard/ProfileSettings';
import RatesManagement from '../components/dashboard/RatesManagement';
import MarginSettings from '../components/dashboard/MarginSettings';
import CalculatorSettings from '../components/dashboard/CalculatorSettings';
import LoyaltyManagement from '../components/dashboard/LoyaltyManagement';

type DashboardTab = 'overview' | 'calculator' | 'orders' | 'documents' | 'messenger' | 'tracking' | 'profile' | 'rates' | 'margins' | 'calculator-settings' | 'loyalty';

const DashboardPage: React.FC = () => {
  const dispatch = useAppDispatch();
  const { user, isLoading } = useAppSelector((state) => state.auth);
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState<DashboardTab>('overview');

  const handleLogout = async () => {
    try {
      await dispatch(logoutUser());
      navigate('/login');
    } catch (error) {
      console.error('Logout failed:', error);
    }
  };

  if (isLoading || !user) {
    return (
      <div className="flex-1 flex items-center justify-center py-12">
        <div className="text-white text-xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  const baseTabs = [
    { id: 'overview', label: '–û–±–∑–æ—Ä', icon: 'üìä' },
    { id: 'calculator', label: '–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏', icon: 'üßÆ' },
    { id: 'orders', label: '–ó–∞—è–≤–∫–∏', icon: 'üìã' },
    { id: 'documents', label: '–î–æ–∫—É–º–µ–Ω—Ç—ã', icon: 'üìÑ' },
    { id: 'messenger', label: '–°–æ–æ–±—â–µ–Ω–∏—è', icon: 'üí¨' },
    { id: 'tracking', label: '–°—É–¥–æ–≤–∞—è –∫–∞—Ä—Ç–∞', icon: 'üó∫Ô∏è' },
    { id: 'profile', label: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'üë§' }
  ];

  const agentTabs = [
    { id: 'rates', label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∞–º–∏', icon: 'üí∞' },
    { id: 'margins', label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä–∂–∏', icon: 'üìà' },
    { id: 'calculator-settings', label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞', icon: '‚öôÔ∏è' },
    { id: 'loyalty', label: '–õ–æ—è–ª—å–Ω–æ—Å—Ç—å', icon: 'üéÅ' }
  ];

  const tabs = user?.userType === 'agent'
    ? [...baseTabs, ...agentTabs]
    : baseTabs;

  const renderOverview = () => (
    <div className="space-y-6">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-white mb-4">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.firstName} {user.lastName}!
        </h1>
        <p className="text-gray-300">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏</p>
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div className="card text-center">
          <div className="text-2xl font-bold text-bearplus-green mb-2">5</div>
          <div className="text-gray-400 text-sm">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫</div>
        </div>
        <div className="card text-center">
          <div className="text-2xl font-bold text-bearplus-green mb-2">12</div>
          <div className="text-gray-400 text-sm">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫</div>
        </div>
        <div className="card text-center">
          <div className="text-2xl font-bold text-bearplus-green mb-2">3</div>
          <div className="text-gray-400 text-sm">–°—É–¥–æ–≤ –≤ –ø—É—Ç–∏</div>
        </div>
        <div className="card text-center">
          <div className="text-2xl font-bold text-bearplus-green mb-2">24</div>
          <div className="text-gray-400 text-sm">–î–æ–∫—É–º–µ–Ω—Ç–æ–≤</div>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <div className="card hover:shadow-glow-sm transition-all duration-300 cursor-pointer"
             onClick={() => setActiveTab('calculator')}>
          <div className="text-3xl mb-4">üßÆ</div>
          <h3 className="text-lg font-semibold text-white mb-2">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É</h3>
          <p className="text-gray-300 text-sm">–ü–æ–ª—É—á–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≥—Ä—É–∑–∞</p>
        </div>

        <div className="card hover:shadow-glow-sm transition-all duration-300 cursor-pointer"
             onClick={() => setActiveTab('orders')}>
          <div className="text-3xl mb-4">üìã</div>
          <h3 className="text-lg font-semibold text-white mb-2">–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É</h3>
          <p className="text-gray-300 text-sm">–û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫—É</p>
        </div>

        <div className="card hover:shadow-glow-sm transition-all duration-300 cursor-pointer"
             onClick={() => setActiveTab('tracking')}>
          <div className="text-3xl mb-4">üó∫Ô∏è</div>
          <h3 className="text-lg font-semibold text-white mb-2">–û—Ç—Å–ª–µ–¥–∏—Ç—å –≥—Ä—É–∑</h3>
          <p className="text-gray-300 text-sm">–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</p>
        </div>

        <div className="card hover:shadow-glow-sm transition-all duration-300 cursor-pointer"
             onClick={() => setActiveTab('documents')}>
          <div className="text-3xl mb-4">üìÑ</div>
          <h3 className="text-lg font-semibold text-white mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã</h3>
          <p className="text-gray-300 text-sm">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–æ–º</p>
        </div>

        <div className="card hover:shadow-glow-sm transition-all duration-300 cursor-pointer"
             onClick={() => setActiveTab('messenger')}>
          <div className="text-3xl mb-4">üí¨</div>
          <h3 className="text-lg font-semibold text-white mb-2">–°–≤—è–∑–∞—Ç—å—Å—è —Å –ª–æ–≥–∏—Å—Ç–æ–º</h3>
          <p className="text-gray-300 text-sm">–ü—Ä—è–º–æ–π –¥–∏–∞–ª–æ–≥ —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º</p>
        </div>

        <div className="card hover:shadow-glow-sm transition-all duration-300 cursor-pointer"
             onClick={() => setActiveTab('profile')}>
          <div className="text-3xl mb-4">üë§</div>
          <h3 className="text-lg font-semibold text-white mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h3>
          <p className="text-gray-300 text-sm">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º</p>
        </div>
      </div>

      {/* Recent Activity */}
      <div className="card">
        <h3 className="text-xl font-bold text-white mb-4">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
        <div className="space-y-4">
          <div className="flex items-center justify-between p-3 bg-bearplus-card-dark rounded-lg">
            <div className="flex items-center">
              <div className="w-2 h-2 bg-bearplus-green rounded-full mr-3"></div>
              <div>
                <div className="text-white font-medium">–ó–∞—è–≤–∫–∞ #ORD-2024-001 –æ–±–Ω–æ–≤–ª–µ–Ω–∞</div>
                <div className="text-gray-400 text-sm">–ì—Ä—É–∑ –ø—Ä–∏–±—ã–ª –≤ –ø–æ—Ä—Ç –®–∞–Ω—Ö–∞–π</div>
              </div>
            </div>
            <div className="text-gray-500 text-sm">2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</div>
          </div>
          
          <div className="flex items-center justify-between p-3 bg-bearplus-card-dark rounded-lg">
            <div className="flex items-center">
              <div className="w-2 h-2 bg-blue-500 rounded-full mr-3"></div>
              <div>
                <div className="text-white font-medium">–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ª–æ–≥–∏—Å—Ç–∞</div>
                <div className="text-gray-400 text-sm">–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç</div>
              </div>
            </div>
            <div className="text-gray-500 text-sm">5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥</div>
          </div>
          
          <div className="flex items-center justify-between p-3 bg-bearplus-card-dark rounded-lg">
            <div className="flex items-center">
              <div className="w-2 h-2 bg-yellow-500 rounded-full mr-3"></div>
              <div>
                <div className="text-white font-medium">–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω</div>
                <div className="text-gray-400 text-sm">Commercial_Invoice.pdf</div>
              </div>
            </div>
            <div className="text-gray-500 text-sm">1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥</div>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="flex-1 py-8">
      <div className="max-w-7xl mx-auto px-4">
        {/* Navigation Tabs */}
        <div className="flex flex-wrap gap-2 mb-8 border-b border-gray-700 pb-4">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as DashboardTab)}
              className={`flex items-center px-4 py-2 rounded-lg font-medium transition-all duration-200 ${
                activeTab === tab.id
                  ? 'bg-bearplus-green text-black'
                  : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
              }`}
            >
              <span className="mr-2">{tab.icon}</span>
              {tab.label}
            </button>
          ))}
        </div>

        {/* Content */}
        <div className="min-h-[600px]">
          {activeTab === 'overview' && renderOverview()}
          {activeTab === 'calculator' && <ShippingCalculator className="max-w-4xl mx-auto" />}
          {activeTab === 'orders' && <OrdersManagement />}
          {activeTab === 'documents' && <DocumentsManagement />}
          {activeTab === 'messenger' && <MessengerSystem />}
          {activeTab === 'tracking' && <ShipTrackingMap />}
          {activeTab === 'profile' && <ProfileSettings onLogout={handleLogout} />}
          {/* Agent-specific tabs */}
          {user?.userType === 'agent' && (
            <>
              {activeTab === 'rates' && <RatesManagement />}
              {activeTab === 'margins' && <MarginSettings />}
              {activeTab === 'calculator-settings' && <CalculatorSettings />}
              {activeTab === 'loyalty' && <LoyaltyManagement />}
            </>
          )}
        </div>
      </div>
    </div>
  );
};

export default DashboardPage;